matrix:
  fast_finish: true
  include:
      # CI targets
    - os: osx
      rust: 1.10.0
      env: TARGET=x86_64-apple-darwin
    - os: linux
      dist: trusty
      rust: 1.10.0
      env: TARGET=x86_64-unknown-linux-gnu
      # nightly builds
    - os: linux
      rust: 1.10.0
      env:
        - TARGET=x86_64-unknown-linux-gnu
        - PACKAGE=ubuntu
      branches:
        only:
          - master
    - os: linux
      rust: 1.10.0
      env:
        - TARGET=x86_64-unknown-linux-gnu
        - PACKAGE=debian
      branches:
        only:
          - master
    - os: osx
      rust: 1.10.0
      env:
        - TARGET=x86_64-apple-darwin
        - PACKAGE=osx
      branches:
        only:
          - master

sudo: required
services:
  - docker
notifications:
  irc:
    channels:
      - "chat.freenode.net#panopticon"
    on_success: change
    on_failure: always
language: rust
addons:
  apt:
    packages:
    # panopticon
    - cmake
    - qt5-default
    - qtdeclarative5-dev
    - libqt5qml-quickcontrols # not approved
    - qtbase5-private-dev
    - pkg-config
    - git
    - build-essential
    # kcov
    - libelf-dev
    - libcurl4-openssl-dev
    - libbfd-dev # not approved
    - libiberty-dev # not approved
    - libdw-dev
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install homebrew/versions/qt55; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq install libbfd-dev libqt5qml-quickcontrols libiberty-dev; fi
after_success: |
  # send coverage report to coveralls.io
  if [[ "$TRAVIS_OS_NAME" == "linux" && "$PACKAGE" == "" ]]; then
      wget https://github.com/SimonKagstrom/kcov/archive/v30.tar.gz
      tar xzf v30.tar.gz && mkdir kcov-30/build && cd kcov-30/build && cmake .. && make &&
      sudo make install && cd ../.. &&
      for I in amd64 avr elf panopticon qtpanopticon project
      do
        kcov --verify --include-path=lib,qt target/cov-"$I" target/debug/"$I"-*
      done &&
      kcov --merge --coveralls-id=$TRAVIS_JOB_ID --include-path=lib,qt target/kcov target/cov-*
  fi
script: |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export QTDIR64=`brew --prefix qt55`; fi
  if [[ "$PACKAGE" == "" ]]
  then
    cargo build --verbose &&
    cargo test --verbose
  else
    case "$TRAVIS_OS_NAME" in
    "osx")
      cd pkg/osx/
      ./package_dmg.sh
      find .
      ;;
    "ubuntu")
      cd pkg/debian
      docker build -t panopticon-build -f Dockerfile.ubuntu .
      docker run -v `pwd`:/out panopticon-build
      find .
      ;;
    "debian")
      cd pkg/debian
      docker build -t panopticon-build -f Dockerfile.debian .
      docker run -v `pwd`:/out panopticon-build
      find .
      ;;
    *)
      exit
      ;;
    esac
  fi
