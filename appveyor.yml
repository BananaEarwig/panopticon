version: 0.15.0-{build}
platform:
  - x64
environment:
  RUST_INSTALL_DIR: C:\Rust
  matrix:
    - RUST_INSTALL_TRIPLE: x86_64-pc-windows-msvc
      RUST_VERSION: 1.10.0
    - RUST_INSTALL_TRIPLE: x86_64-pc-windows-msvc
      RUST_VERSION: 1.10.0
      PACKAGE: win
      FTP_PASSWD:
        secure: DBE4nt5J/zQUXTGe8QTOJg==
install:
  - if [%PACKAGE%]==[win] (
      if NOT [%APPVEYOR_REPO_BRANCH%]==[master] (
        set SKIP_BUILD=1
      )
    )
  # Rust & Qt
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-$Env:RUST_VERSION-$Env:RUST_INSTALL_TRIPLE.msi"
  - if NOT [%SKIP_BUILD%]==[1] (
      start /wait msiexec /i rust-%RUST_VERSION%-%RUST_INSTALL_TRIPLE%.msi INSTALLDIR="%RUST_INSTALL_DIR%" /quiet /qn /norestart &
      set PATH=%PATH%;%RUST_INSTALL_DIR%\bin &
      rustc --version &
      cargo --version &
      set QTDIR=C:\Qt\5.4\msvc2013_64_opengl &
      set PATH=%QTDIR%\bin;%PATH% &
      set CMAKE_PREFIX_PATH=%QTDIR%;%CMAKE_PREFIX_PATH%
    )

build_script:
  - call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x64
  - if [%PACKAGE%]==[] (
      cargo build --verbose
    ) else (
      cd pkg\windows &
      call package_zip.bat &
      curl -T panopticon-0.15.zip -u upload:%FTP_PASSWD% -Q "-SITE CHMOD 664 panopticon-master.zip" ftp://ftp.panopticon.re/panopticon-master.zip
    )
test_script:
  - if [%PACKAGE%]==[] (
      call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x64 &
      cargo test --verbose
    )
