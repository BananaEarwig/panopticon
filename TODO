2012-10-8

==> Implement new basic_block interface **DONE**
	--> Member functions **DONE**
	--> (un)conditional_jump **DONE**
	--> split **DONE**

==> Procedure extension with non-overlapping blocks **DONE**
	--> connect to unresolved ctrans edges **DONE**
	--> merge if new edges allow it **DONE**

==> Add way to find instructions of a mnemonic in a basic block **DONE**

==> Procedure refinement
	--> refine larger mnemonics with smaller
	--> split old block if inner mnemonics are target of ctrans **DONE**

==> memory support **DONE**
	--> memory value (zone name, endianess) **DONE**
	--> assignment class for instructions that specs slice of target (Bincoa) **DONE**
	--> code_generator.hh lvalue **DONE**
	--> avr.hh lvalue (var_decl in cg functions) **DONE**

==> replace width with slice in value, remove width from others **DONE**

==> remove implicit definitions of all varaibles
	--> explicit initialization of UEVar's with ``undefinied''

==> code_generator
	--> test type inference **DONE**
	--> typechecks **DONE**
	--> fold superfluous IL
	--> ensure all value_ptr are only definied once **DONE**

==> K-set domain for sparse constant propagation

==> Finish AVR disassembler
	--> compare into extra function **DONE**
	--> use constant instances w/ right width **DONE**
	--> missing instructions

==> ``Range and Set Abstraction using SAT'' to improve guards

==> Data flow
	--> Phi-node arguments w/ right widths

==> include lib into gui
